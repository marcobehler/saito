plugins {
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

// ================ CONFIGURATION =======================

apply plugin: 'distribution'
apply plugin: 'maven'

tasks.withType(Jar).all { Jar jar ->

    manifest {
        attributes 'Main-Class': 'com.marcobehler.saito.cli.SaitoCLI'
    }

    jar.doFirst {
        String fileName = "project.properties"

        ant.propertyfile(file: "${jar.temporaryDir}/${fileName}") {
            entry(key: "PROJECT_GROUP", value: project.group)
            entry(key: "PROJECT_ARTIFACT", value: project.archivesBaseName)
            entry(key: "PROJECT_VERSION", value: project.version)
            entry(key: "PROJECT_BUILD_DATE", value: new Date())
        }

        jar.from(jar.temporaryDir) {
            include fileName
            into("/")
        }
    }
}

dependencies {
    compile project(':saito-core')

    compile 'ch.qos.logback:logback-classic:1.1.7'
    compile 'ch.qos.logback:logback-core:1.1.7'

    compile 'org.eclipse.jetty:jetty-server:9.3.8.v20160314'

    compile 'com.beust:jcommander:1.48'
}


// ================ DISTRIBUTION =======================

task bundleStarterScripts(type: Copy) {
    from 'src/main/resources'
    into 'build/libs'
    include 'saito.bat'
    include 'saito'
}

shadowJar.dependsOn 'bundleStarterScripts'


shadowJar {
    baseName = 'saito'
    classifier = ''
    version = ''
}

distributions {
    main {
        baseName = 'saito'
        contents {
            from { 'build/libs' }
        }
    }
}

distZip {
    eachFile { file ->
        String path = file.relativePath
        file.setPath(path.substring(path.indexOf("/")+1,path.length()))
    }
}
distTar {
    eachFile { file ->
        String path = file.relativePath
        file.setPath(path.substring(path.indexOf("/")+1,path.length()))
    }
}

distTar.dependsOn 'shadowJar'
distZip.dependsOn 'shadowJar'


uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://c:/test")

//            aven {
//                url "s3://myCompanyBucket/maven2"
//                credentials(AwsCredentials) {
//                    accessKey "someKey"
//                    secretKey "someSecret"
//                }
//            }
        }
    }
}

// ================ DEVELOPMENT =======================

task localInstall(type: Copy) {
    from(zipTree('build/distributions/saito-' + version + ".zip")) { include '**' }
    def target = System.getProperty("user.home") + '/saito'
    print "Into ${target}"
    into target
}

localInstall.dependsOn 'distZip'